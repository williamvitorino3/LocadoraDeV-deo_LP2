// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using WebApi.Models;

namespace Locadora.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20180309112232_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.1-rtm-125")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebApi.Models.Cliente", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("WebApi.Models.Devolucao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<long?>("ClienteId1");

                    b.Property<string>("DataEntrega");

                    b.Property<int>("FilmeId");

                    b.Property<long?>("FilmeId1");

                    b.Property<int>("FuncionarioId");

                    b.Property<long?>("FuncionarioId1");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId1");

                    b.HasIndex("FilmeId1");

                    b.HasIndex("FuncionarioId1");

                    b.ToTable("Devolucoes");
                });

            modelBuilder.Entity("WebApi.Models.Filme", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Filmes");
                });

            modelBuilder.Entity("WebApi.Models.FilmeLocacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Data");

                    b.Property<int>("FilmeId");

                    b.Property<long?>("FilmeId1");

                    b.Property<int>("LocacaoId");

                    b.Property<long?>("LocacaoId1");

                    b.Property<double>("Valor");

                    b.HasKey("Id");

                    b.HasIndex("FilmeId1");

                    b.HasIndex("LocacaoId1")
                        .IsUnique()
                        .HasFilter("[LocacaoId1] IS NOT NULL");

                    b.ToTable("FilmeLocacoes");
                });

            modelBuilder.Entity("WebApi.Models.Funcionario", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Cpf");

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Funcionarios");
                });

            modelBuilder.Entity("WebApi.Models.Locacao", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClienteId");

                    b.Property<long?>("ClienteId1");

                    b.Property<string>("Data");

                    b.Property<int>("FilmeLocacaoId");

                    b.Property<int>("FuncionarioId");

                    b.Property<long?>("FuncionarioId1");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId1");

                    b.HasIndex("FuncionarioId1");

                    b.ToTable("Locacoes");
                });

            modelBuilder.Entity("WebApi.Models.Devolucao", b =>
                {
                    b.HasOne("WebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId1");

                    b.HasOne("WebApi.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId1");

                    b.HasOne("WebApi.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId1");
                });

            modelBuilder.Entity("WebApi.Models.FilmeLocacao", b =>
                {
                    b.HasOne("WebApi.Models.Filme", "Filme")
                        .WithMany()
                        .HasForeignKey("FilmeId1");

                    b.HasOne("WebApi.Models.Locacao", "Locacao")
                        .WithOne("FilmeLocacao")
                        .HasForeignKey("WebApi.Models.FilmeLocacao", "LocacaoId1");
                });

            modelBuilder.Entity("WebApi.Models.Locacao", b =>
                {
                    b.HasOne("WebApi.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId1");

                    b.HasOne("WebApi.Models.Funcionario", "Funcionario")
                        .WithMany()
                        .HasForeignKey("FuncionarioId1");
                });
#pragma warning restore 612, 618
        }
    }
}
